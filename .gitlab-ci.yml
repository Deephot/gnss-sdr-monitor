# This is performed before the scripts in the stages step
before_script:
  - source /etc/profile


# Defines stages which are to be executed
stages:
  - build


# Stage "build"
centos7:
  image: centos:centos7
  stage: build
  script:
    - yum install -y wget
    - wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    - rpm -Uvh epel-release-latest-7.noarch.rpm
    - yum install -y gcc-c++ make cmake git boost-devel protobuf-devel protobuf-compiler qt5-qtbase-devel qt5-qtdeclarative-devel qt5-qtlocation-devel qt5-qtcharts-devel qt5-qtdeclarative-devel
    - cd build
    - cmake ..
    - NPROC=$(grep -c ^processor /proc/cpuinfo)
    - make -j$(($NPROC+1))
    - make install
  allow_failure: true


centos8:
  image: centos:centos8
  stage: build
  script:
    - dnf install -y wget
    - wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
    - rpm -Uvh epel-release-latest-8.noarch.rpm
    - dnf install -y 'dnf-command(config-manager)'
    - dnf config-manager --set-enabled PowerTools
    - dnf config-manager --enable epel-testing epel-playground
    - dnf install -y gcc-c++ make cmake git boost-devel protobuf-devel protobuf-compiler qt5-qtbase-devel qt5-qtdeclarative-devel qt5-qtlocation-devel qt5-qtcharts-devel qt5-qtdeclarative-devel
    - cd build
    - cmake ..
    - NPROC=$(grep -c ^processor /proc/cpuinfo)
    - make -j$(($NPROC+1))
    - make install
  allow_failure: true


debian10:
  image: debian:buster-slim
  stage: build
  script:
    - apt-get update
    - apt-get install -y --no-install-recommends build-essential cmake git libboost-dev libboost-system-dev libprotobuf-dev protobuf-compiler qtbase5-dev qtdeclarative5-dev qtpositioning5-dev libqt5charts5-dev qml-module-qtquick2 qml-module-qtquick-controls2 qml-module-qtquick-window2 qml-module-qtlocation qml-module-qtpositioning qml-module-qtquick-layouts
    - cd build
    - cmake ..
    - NPROC=$(grep -c ^processor /proc/cpuinfo)
    - make -j$(($NPROC+1))
    - make install
  allow_failure: true


fedora29:
  image: fedora:29
  stage: build
  before_script:
    - source ~/.bash_profile
  script:
    - dnf install -y gcc-c++ make cmake git boost-devel protobuf-devel protobuf-compiler qt5-qtbase-devel qt5-qtdeclarative-devel qt5-qtlocation-devel qt5-qtcharts-devel qt5-qtdeclarative-devel
    - cd build
    - cmake ..
    - NPROC=$(grep -c ^processor /proc/cpuinfo)
    - make -j$(($NPROC+1))
    - make install
  allow_failure: true


ubuntu18.04:
  image: ubuntu:bionic
  stage: build
  script:
    - apt-get update
    - apt-get install -y --no-install-recommends build-essential cmake git libboost-dev libboost-system-dev libprotobuf-dev protobuf-compiler qtbase5-dev qtdeclarative5-dev qtpositioning5-dev libqt5charts5-dev qml-module-qtquick2 qml-module-qtquick-controls2 qml-module-qtquick-window2 qml-module-qtlocation qml-module-qtpositioning qml-module-qtquick-layouts
    - cd build
    - cmake ..
    - NPROC=$(grep -c ^processor /proc/cpuinfo)
    - make -j$(($NPROC+1))
    - make install


ubuntu18.10:
  image: ubuntu:cosmic
  stage: build
  script:
    - apt-get update
    - apt-get install -y --no-install-recommends build-essential cmake git libboost-dev libboost-system-dev libprotobuf-dev protobuf-compiler qtbase5-dev qtdeclarative5-dev qtpositioning5-dev libqt5charts5-dev qml-module-qtquick2 qml-module-qtquick-controls2 qml-module-qtquick-window2 qml-module-qtlocation qml-module-qtpositioning qml-module-qtquick-layouts
    - cd build
    - cmake ..
    - NPROC=$(grep -c ^processor /proc/cpuinfo)
    - make -j$(($NPROC+1))
    - make install
  allow_failure: true


ubuntu19.04:
  image: ubuntu:disco
  stage: build
  script:
    - apt-get update
    - apt-get install -y --no-install-recommends build-essential cmake git libboost-dev libboost-system-dev libprotobuf-dev protobuf-compiler qtbase5-dev qtdeclarative5-dev qtpositioning5-dev libqt5charts5-dev qml-module-qtquick2 qml-module-qtquick-controls2 qml-module-qtquick-window2 qml-module-qtlocation qml-module-qtpositioning qml-module-qtquick-layouts
    - cd build
    - cmake ..
    - NPROC=$(grep -c ^processor /proc/cpuinfo)
    - make -j$(($NPROC+1))
    - make install
  allow_failure: true


ubuntu19.10:
  image: ubuntu:eoan
  stage: build
  script:
    - apt-get update
    - apt-get install -y --no-install-recommends build-essential cmake git libboost-dev libboost-system-dev libprotobuf-dev protobuf-compiler qtbase5-dev qtdeclarative5-dev qtpositioning5-dev libqt5charts5-dev qml-module-qtquick2 qml-module-qtquick-controls2 qml-module-qtquick-window2 qml-module-qtlocation qml-module-qtpositioning qml-module-qtquick-layouts
    - cd build
    - cmake ..
    - NPROC=$(grep -c ^processor /proc/cpuinfo)
    - make -j$(($NPROC+1))
    - make install
  allow_failure: true


coverity-scan:
  image: ubuntu:bionic
  stage: build
  script:
    - apt-get update
    - apt-get install -y wget curl ca-certificates
    - wget -O cov-analysis-linux64-2019.03.tar.gz https://scan.coverity.com/download/cxx/linux64 --post-data "project=$COVERITY_SCAN_USER%2Fgnss-sdr-monitor&token=$COVERITY_SCAN_TOKEN" --no-check-certificate
    - tar xvzf cov-analysis-linux64-2019.03.tar.gz
    - export PATH=$PATH:$(pwd)/cov-analysis-linux64-2019.03/bin
    - apt-get install -y --no-install-recommends build-essential cmake git libboost-dev libboost-system-dev libprotobuf-dev protobuf-compiler qtbase5-dev qtdeclarative5-dev qtpositioning5-dev libqt5charts5-dev qml-module-qtquick2 qml-module-qtquick-controls2 qml-module-qtquick-window2 qml-module-qtlocation qml-module-qtpositioning qml-module-qtquick-layouts
    - cd build
    - cmake ..
    - cov-build --dir cov-int make -j2
    - tar cvzf gnss-sdr-monitor.tgz cov-int
    - curl -k --form token=$COVERITY_SCAN_TOKEN --form email=$COVERITY_SCAN_EMAIL --form file=@$(pwd)/gnss-sdr-monitor.tgz --form version="0" --form description=" " https://scan.coverity.com/builds?project=$COVERITY_SCAN_USER%2Fgnss-sdr-monitor --progress-bar | tee -a "log_upload.txt" ; test ${PIPESTATUS[0]} -eq 0
  allow_failure: true
  when: manual


